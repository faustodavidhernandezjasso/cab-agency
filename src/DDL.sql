-------------------------------------------------------------------------------
----------------------------------DDL------------------------------------------
-------------------------------------------------------------------------------

drop schema if exists public cascade;
create schema public;

create table cliente(
	idCliente SERIAL NOT NULL UNIQUE,
	nombre VARCHAR(50) NOT NULL CHECK (nombre <> ''),
	apellidoPaterno VARCHAR(50) NOT NULL CHECK (apellidoPaterno <> ''),
	apellidoMaterno VARCHAR(50) CHECK (apellidoMaterno <> ''),
	calle VARCHAR(50) CHECK (calle <> ''),
	numeroInterior INT CHECK (numeroInterior > 0),
	numeroExterior INT CHECK (numeroExterior >0),
	colonia VARCHAR(50) CHECK (colonia <> ''),
	cp INT CHECK(cp between 10000 and 99999),
	fotografia VARCHAR(50) CHECK (fotografia <> ''), 
	horarioEntrada TIME CHECK (horarioEntrada > '05:00 AM'),
	horarioSalida TIME CHECK (horarioSalida < '11:59 PM'),
	telefonoCasa INT CHECK (telefonoCasa > 0) NOT NULL,
	lugarDeEstudio VARCHAR(50) CHECK (lugarDeEstudio <> ''),
	lugarDeTrabajoAcademico VARCHAR(50) CHECK (lugarDeTrabajoAcademico <> ''),
	lugarDeTrabajoTrabajador VARCHAR(50) CHECK (lugarDeTrabajoTrabajador <> ''),
	esAlumno BOOLEAN NOT NULL,
	esAcademico BOOLEAN NOT NULL,
	esTrabajador BOOLEAN NOT NULL,
	PRIMARY KEY (idCliente)
);

create table registroCliente(
	idRegistroCliente INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	idCliente INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroCliente)
);

COMMENT ON TABLE cliente IS 'Tabla que contienela informacion de los clientes';
COMMENT ON COLUMN cliente.idCliente IS 'Es el identificador de los clientes,es un numero unico que funciona como identificador';
COMMENT ON COLUMN cliente.nombre IS 'Primer nombre del cliente';
COMMENT ON COLUMN cliente.apellidoPaterno IS 'Apellido paterno del cliente';
COMMENT ON COLUMN cliente.apellidoMaterno IS 'Apellido materno del cliente';
COMMENT ON COLUMN cliente.calle IS 'Calle donde vive el cliente';
COMMENT ON COLUMN cliente.numeroInterior IS 'Numero interior de donde vive el cliente';
COMMENT ON COLUMN cliente.numeroExterior IS 'Numero exterior de donde vive el cliente';
COMMENT ON COLUMN cliente.colonia IS 'Colonia donde vive el cliente';
COMMENT ON COLUMN cliente.cp IS 'Codigo postal de donde vive el cliente';
COMMENT ON COLUMN cliente.fotografia IS 'Valor booleano que indica si el cliente a subido una foto de perfil o no';
COMMENT ON COLUMN cliente.horarioEntrada IS 'Horario en el que un cliente inicia el servicio';
COMMENT ON COLUMN cliente.horarioSalida IS 'Horario en el que un cliente termina el servicio';
COMMENT ON COLUMN cliente.telefonoCasa IS 'Telefono de casa del cliente';
COMMENT ON COLUMN cliente.lugarDeEstudio IS 'Facultad en la que estudia el cliente';
COMMENT ON COLUMN cliente.lugarDeTrabajoAcademico IS 'Facultad en la que trabaja el cliente como academico';
COMMENT ON COLUMN cliente.lugarDeTrabajoTrabajador IS 'Facultad en la que trabaja el cliente';
COMMENT ON COLUMN cliente.esAlumno IS 'Valor booleano que nos indica si un cliente es alumno';
COMMENT ON COLUMN cliente.esAcademico IS 'Valor booleano que nos indica si un cliente es academico';
COMMENT ON COLUMN cliente.esTrabajador IS 'Valor booleano que nos indica si un cliente es trabajador';

create table chofer(	
	idChofer SERIAL NOT NULL UNIQUE,
	nombre VARCHAR(50) NOT NULL CHECK (nombre <> ''),
	apellidoPaterno VARCHAR(50) NOT NULL CHECK (apellidoPaterno <> ''),
	apellidoMaterno VARCHAR(50) CHECK (apellidoMaterno <> ''),
	calle VARCHAR(50) CHECK (calle <> ''),
	numeroInterior INT CHECK (numeroInterior > 0),
	numeroExterior INT CHECK (numeroExterior >0),
	colonia VARCHAR(50) CHECK (colonia <> ''),
	cp INT CHECK(cp between 10000 and 99999),
	fotografia VARCHAR(50) CHECK (fotografia <> ''),
	fechaIngreso DATE NOT NULL,
	fechaSalida DATE,
	numeroLicencia INT UNIQUE,
	esChofer BOOLEAN NOT NULL,
	esPropietario BOOLEAN NOT NULL,
	rfc VARCHAR(13) CHECK(CHAR_LENGTH(rfc) = 12 or CHAR_LENGTH(rfc) = 13) NOT NULL UNIQUE,
	PRIMARY KEY (idChofer)
);

create table registroChofer(
	idRegistroChofer INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	idChofer INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroChofer)
);

COMMENT ON TABLE chofer IS 'Tabla que contienela informacion de los choferes';
COMMENT ON COLUMN chofer.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN chofer.nombre IS 'Primer nombre del chofer';
COMMENT ON COLUMN chofer.apellidoPaterno IS 'Apellido paterno del chofer';
COMMENT ON COLUMN chofer.apellidoMaterno IS 'Apellido materno del chofer';
COMMENT ON COLUMN chofer.calle IS 'Calle donde vive el chofer';
COMMENT ON COLUMN chofer.numeroInterior IS 'Numero interior de donde vive el chofer';
COMMENT ON COLUMN chofer.numeroExterior IS 'Numero exterior de donde vive el chofer';
COMMENT ON COLUMN chofer.colonia IS 'Colonia donde vive el chofer';
COMMENT ON COLUMN chofer.cp IS 'Codigo postal de donde vive el chofer';
COMMENT ON COLUMN chofer.fotografia IS 'Valor booleano que indica si el chofer a subido una foto de perfil o no';
COMMENT ON COLUMN chofer.fechaIngreso IS 'Fecha en la que ingreso a trabajar un chofer';
COMMENT ON COLUMN chofer.fechaSalida IS 'Fecha en la que un chofer deja de trabajar para la compañia, puede tener valor nulo';
COMMENT ON COLUMN chofer.numeroLicencia IS 'Numero de la licencia del chofer';
COMMENT ON COLUMN chofer.esChofer IS 'Valor booleano que nos indica si el integrante de la empresa es chofer';
COMMENT ON COLUMN chofer.esPropietario IS 'Valor booleano que nos indica si el integrante de la empresa es propietario de un vehiculo';
COMMENT ON COLUMN chofer.rfc IS 'RFC asociado al chofer';

create table vehiculo(
	numeroEconomico INT NOT NULL UNIQUE,
	idChofer INT NOT NULL,
	hibridoOGas BOOLEAN NOT NULL,
	estandarOAutomatico BOOLEAN NOT NULL,
	fechaDeFabricacion DATE NOT NULL,
	numeroDeCilindros INT CHECK(numeroDeCilindros between 4 and 6) NOT NULL,
	numeroDePuertas INT CHECK(numeroDePuertas between 2 and 6) NOT NULL,
	llantaRefaccion BOOLEAN NOT NULL,
	marca CHAR(20) NOT NULL CHECK (marca <> ''),
	modeloVehiculo CHAR(20) NOT NULL CHECK (modeloVehiculo <> ''),
	razon VARCHAR(50),
	baja BOOLEAN NOT NULL,
	pasajeros INT CHECK(pasajeros between 1 and 4) NOT NULL,
	PRIMARY KEY (numeroEconomico),
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE
);

create table registroVehiculo(
	idRegistroChofer INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	numeroEconomico INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroChofer)
);

COMMENT ON TABLE vehiculo IS 'Tabla que contienela informacion de los vehiculos';
COMMENT ON COLUMN vehiculo.numeroEconomico IS 'Es el numero identificador de los vehiculos,es un numero unico';
COMMENT ON COLUMN vehiculo.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN vehiculo.hibridoOGas IS 'Valor booleano que nos indica si un vehiculo es hibrido o usa gasolina';
COMMENT ON COLUMN vehiculo.estandarOAutomatico IS 'Valor booleano que nos indica si un vehiculo es estandar o automatico';
COMMENT ON COLUMN vehiculo.fechaDeFabricacion IS 'Año del vehiculo';
COMMENT ON COLUMN vehiculo.numeroDeCilindros IS 'Numero de cilindros con los que cuenta el vehiculo';
COMMENT ON COLUMN vehiculo.numeroDePuertas IS 'Numero de puertas con los que cuenta el vehiculo';
COMMENT ON COLUMN vehiculo.llantaRefaccion IS 'Valor booleano que nos indica si un vehiculo cuenta con una llanta de refaccion o no';
COMMENT ON COLUMN vehiculo.marca IS 'Marca del vehiculo';
COMMENT ON COLUMN vehiculo.modeloVehiculo IS 'Modelo del vehiculo';
COMMENT ON COLUMN vehiculo.baja IS 'Valor booleano que nos indica si un vehiculo esta dado de baja o no';
COMMENT ON COLUMN vehiculo.razon IS 'Razon por la cual un vehiculo fue dado de baja, puede ser nulo';
COMMENT ON COLUMN vehiculo.pasajeros IS 'Cantidad de pasajeros que puede llevar un vehiculo';

create table infraccion(
	numeroBoleta INT NOT NULL UNIQUE,
	numeroEconomico INT NOT NULL,
	idChofer INT NOT NULL,
	subsidio INT,
	hora TIME NOT NULL, 
	calle VARCHAR(50) NOT NULL CHECK (calle <> ''),
	alcaldia VARCHAR(50) NOT NULL CHECK (alcaldia <> ''),
	cp INT NOT NULL CHECK(cp between 10000 and 99999),
	nombre VARCHAR(50) NOT NULL CHECK (nombre <> ''),
	apellidoPaterno VARCHAR(50) NOT NULL CHECK (apellidoPaterno <> ''),
	apellidoMaterno VARCHAR(50) CHECK (apellidoMaterno <> ''),
	fecha DATE NOT NULL,
	monto INT NOT NULL, 
	pagado BOOLEAN NOT NULL,
	PRIMARY KEY (numeroBoleta),
	FOREIGN KEY (numeroEconomico) REFERENCES vehiculo(numeroEconomico) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE

);

create table registroInfraccion(
	idRegistroInfraccion INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	numeroBoleta INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroInfraccion)
);

COMMENT ON TABLE infraccion IS 'Tabla que contienela informacion de las infracciones realizadas por los choferes';
COMMENT ON COLUMN infraccion.numeroBoleta IS 'Es el numero identificador de las infracciones,es un numero unico';
COMMENT ON COLUMN infraccion.numeroEconomico IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN infraccion.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN infraccion.subsidio IS 'Subsidio que se ofrece a el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.hora IS 'Hora en la que el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.calle IS 'Calle en la que el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.alcaldia IS 'Alcaldia en la que el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.cp IS 'Codigo postal de donde el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.nombre IS 'Nombre del oficial que levanto la infraccion';
COMMENT ON COLUMN infraccion.apellidoPaterno IS 'Apellido paterno del oficial que levanto la infraccion';
COMMENT ON COLUMN infraccion.apellidoMaterno IS 'Apellido Materno del oficial que levanto la infraccion';
COMMENT ON COLUMN infraccion.fecha IS 'Fecha cuando el chofer que realizo la infraccion';
COMMENT ON COLUMN infraccion.monto IS 'Monto a pagar de la infraccion';
COMMENT ON COLUMN infraccion.pagado IS 'Booleano que indica si la infraccion ha sido pagada';

create table viaje(
	idViaje SERIAL NOT NULL UNIQUE,	
	idChofer INT NOT NULL,
	idCliente INT NOT NULL,
	numeroEconomico INT NOT NULL,
	calleOrigen VARCHAR(50) CHECK (calleOrigen <> ''),
	numeroInteriorOrigen INT CHECK (numeroInteriorOrigen > 0),
	numeroExteriorOrigen INT CHECK (numeroExteriorOrigen >0),
	coloniaOrigen VARCHAR(50) CHECK (coloniaOrigen <> ''),
	cpOrigen INT CHECK(cpOrigen between 10000 and 99999),
	calleDestino VARCHAR(50) CHECK (calleDestino <> ''),
	numeroInteriorDestino INT CHECK (numeroInteriorDestino > 0),
	numeroExteriorDestino INT CHECK (numeroExteriorDestino >0),
	coloniaDestino VARCHAR(50) CHECK (coloniaDestino <> ''),
	cpDestino INT CHECK(cpDestino between 10000 and 99999),
	tiempo INT NOT NULL,
	distancia INT NOT NULL,
	dentroDeCU BOOLEAN NOT NULL,
	numPasajerosExtra INT CHECK(numPasajerosExtra between 0 and 3),
	fecha DATE NOT NULL,
	hora TIME NOT NULL,
	PRIMARY KEY (idViaje),
	FOREIGN KEY (numeroEconomico) REFERENCES vehiculo(numeroEconomico) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (idCliente) REFERENCES cliente(idCliente) ON DELETE CASCADE ON UPDATE CASCADE	
);

create table registroViaje(
    idViaje SERIAL NOT NULL UNIQUE,	
	idChofer INT NOT NULL,
	idCliente INT NOT NULL,
	numeroEconomico INT NOT NULL,
	calleOrigen VARCHAR(50) CHECK (calleOrigen <> ''),
	numeroInteriorOrigen INT CHECK (numeroInteriorOrigen > 0),
	numeroExteriorOrigen INT CHECK (numeroExteriorOrigen >0),
	coloniaOrigen VARCHAR(50) CHECK (coloniaOrigen <> ''),
	cpOrigen INT CHECK(cpOrigen between 10000 and 99999),
	calleDestino VARCHAR(50) CHECK (calleDestino <> ''),
	numeroInteriorDestino INT CHECK (numeroInteriorDestino > 0),
	numeroExteriorDestino INT CHECK (numeroExteriorDestino >0),
	coloniaDestino VARCHAR(50) CHECK (coloniaDestino <> ''),
	cpDestino INT CHECK(cpDestino between 10000 and 99999),
	tiempo INT NOT NULL,
	distancia INT NOT NULL,
	dentroDeCU BOOLEAN NOT NULL,
	numPasajerosExtra INT CHECK(numPasajerosExtra between 0 and 3),
	fecha DATE NOT NULL,
	hora TIME NOT NULL,
	cobro real not null
);

COMMENT ON TABLE viaje IS 'Tabla que contienela informacion de los viajes realizados';
COMMENT ON COLUMN viaje.idViaje IS 'Es el numero identificador de los viajes,es un numero unico';
COMMENT ON COLUMN viaje.numeroEconomico IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN viaje.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN viaje.idCliente IS 'Es el identificador de los clientes,es un numero unico que funciona como identificador';
COMMENT ON COLUMN viaje.calleOrigen IS 'Calle donde comienza el viaje';
COMMENT ON COLUMN viaje.numeroInteriorOrigen IS 'Numero interior de donde donde comienza el viaje';
COMMENT ON COLUMN viaje.numeroExteriorOrigen IS 'Numero exterior de donde comienza el viaje';
COMMENT ON COLUMN viaje.coloniaOrigen IS 'Colonia donde comienza el viaje';
COMMENT ON COLUMN viaje.cpOrigen IS 'Codigo postal de donde comienza el viaje';
COMMENT ON COLUMN viaje.calleDestino IS 'Calle donde termina el viaje';
COMMENT ON COLUMN viaje.numeroInteriorDestino IS 'Numero interior de donde donde termina el viaje';
COMMENT ON COLUMN viaje.numeroExteriorDestino IS 'Numero exterior de donde termina el viaje';
COMMENT ON COLUMN viaje.coloniaDestino IS 'Colonia donde termina el viaje';
COMMENT ON COLUMN viaje.cpDestino IS 'Codigo postal de donde termina el viaje';
COMMENT ON COLUMN viaje.tiempo IS 'Tiempo en el que se relizo el viaje';
COMMENT ON COLUMN viaje.distancia IS 'Distancia que se recorrio en el viaje';
COMMENT ON COLUMN viaje.dentroDeCU IS 'Booleano que indica si el viaje es dentro de Ciudad Universitaria';
COMMENT ON COLUMN viaje.numPasajerosExtra IS 'Numero de pasajeros que acompañan al cliente';
COMMENT ON COLUMN viaje.fecha IS 'La fecha a la que se realizo el viaje';
COMMENT ON COLUMN viaje.hora IS 'La hora a la que se realizo el viaje';

create table seguro(
	numeroEconomico INT NOT NULL,
	numeroPoliza INT NOT NULL,
	cobertura CHAR(20) NOT NULL CHECK (cobertura <> ''),
	vigencia DATE NOT NULL,
	aseguradora VARCHAR(50) NOT NULL CHECK (aseguradora <> ''),
	PRIMARY KEY (aseguradora,numeroPoliza),
	FOREIGN KEY (numeroEconomico) REFERENCES vehiculo(numeroEconomico) ON DELETE CASCADE ON UPDATE CASCADE
);

create table registroSeguro(
	idRegistroSeguro INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	aseguradora varchar(50),
	numeroPoliza INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroSeguro)
);
	
COMMENT ON TABLE seguro IS 'Tabla que contienela informacion de los seguros de los vehiculos';
COMMENT ON COLUMN seguro.numeroEconomico IS 'Es el numero identificador de los vehiculos,es un numero unico';
COMMENT ON COLUMN seguro.numeroPoliza IS 'Es el numero identificador de el seguro de los vehiculos,es un numero unico';
COMMENT ON COLUMN seguro.cobertura IS 'Tipo de cobertura del seguro';
COMMENT ON COLUMN seguro.vigencia IS 'Vigencia del seguro';
COMMENT ON COLUMN seguro.aseguradora IS 'Compañia que asegura el vehiculo';

create table manejar(
	idChofer INT NOT NULL,
	numeroEconomico INT NOT NULL,
	horarioInicio TIME CHECK (horarioInicio  > '05:00 AM'),
	horarioFin TIME CHECK (horarioFin < '11:59 PM'),
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (numeroEconomico) REFERENCES vehiculo(numeroEconomico) ON DELETE CASCADE ON UPDATE CASCADE
);

create table registroManejar(
	idRegistroManejar INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	idChofer INT,
	numeroEconomico INT, 
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroManejar)
);

COMMENT ON TABLE manejar IS 'Tabla que contienela los horarios de los choferes';
COMMENT ON COLUMN manejar.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';
COMMENT ON COLUMN manejar.numeroEconomico IS 'Es el numero identificador de los vehiculos,es un numero unico';
COMMENT ON COLUMN manejar.horarioInicio IS 'Hora de inicio laboral de un chofer';
COMMENT ON COLUMN manejar.horarioFin IS 'Hora de salida laboral de un chofer';

create table telefonoCelularCliente(
	telefonoCelular INT NOT NULL,
	idCliente INT NOT NULL,
	PRIMARY KEY (telefonoCelular,idCliente),
	FOREIGN KEY (idCliente) REFERENCES cliente(idCliente) ON DELETE CASCADE ON UPDATE CASCADE

);

create table registroTelefonoCelularCliente(
	idRegistroTelefonoCelularCliente INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	telefonoCelular INT,
	idCliente INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroTelefonoCelularCliente)
);

COMMENT ON TABLE telefonoCelularCliente IS 'Tabla que contienela los telefonos celulares de los clientes';
COMMENT ON COLUMN telefonoCelularCliente.telefonoCelular IS 'Es el telefono celular de un cliente';
COMMENT ON COLUMN telefonoCelularCliente.idCliente IS 'Es el identificador de los clientes,es un numero unico que funciona como identificador';

create table correoElectronicoCliente(
	correoElectronico VARCHAR(80) NOT NULL,
	idCliente INT NOT NULL,
	PRIMARY KEY (correoElectronico,idCliente),
	FOREIGN KEY (idCliente) REFERENCES cliente(idCliente) ON DELETE CASCADE ON UPDATE CASCADE

);

create table registroCorreoElectronicoCliente(
	idRegistroCorreoElectronicoCliente INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	correoELectronico VARCHAR(100),
	idCliente INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroCorreoElectronicoCliente)
);

COMMENT ON TABLE correoElectronicoCliente IS 'Tabla que contiene los correos electronicos de los clientes';
COMMENT ON COLUMN correoElectronicoCliente.correoElectronico IS 'Es el correo electronico de un cliente';
COMMENT ON COLUMN correoElectronicoCliente.idCliente IS 'Es el identificador de los clientes,es un numero unico que funciona como identificador';

create table telefonoCelularChofer(
	telefonoCelular INT NOT NULL,
	idChofer INT NOT NULL,
	PRIMARY KEY (telefonoCelular,idChofer),
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE
);

create table registroTelefonoCelularChofer(
	idRegistroTelefonoCelularChofer INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	telefonoCelular INT,
	idChofer INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroTelefonoCelularChofer)
);

COMMENT ON TABLE telefonoCelularChofer IS 'Tabla que contiene los telefonos celulares de los choferes';
COMMENT ON COLUMN telefonoCelularChofer.telefonoCelular IS 'Es el telefono celular de un chofer';
COMMENT ON COLUMN telefonoCelularChofer.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';

create table correoElectronicoChofer(
	correoElectronico VARCHAR(80) NOT NULL,
	idChofer INT NOT NULL,
	PRIMARY KEY (correoElectronico,idChofer),
	FOREIGN KEY (idChofer) REFERENCES chofer(idChofer) ON DELETE CASCADE ON UPDATE CASCADE

);

create table registroCorreoElectronicoChofer(
	idRegistroCorreoElectronicoChofer INT GENERATED BY DEFAULT AS IDENTITY,
    nombreUsuario varchar(50),
	correoELectronico VARCHAR(100),
	idChofer INT,
    fecha DATE,
    tipo varchar(50),
    PRIMARY KEY(idRegistroCorreoElectronicoChofer)
);

COMMENT ON TABLE correoElectronicoChofer IS 'Tabla que contiene los correos electronicos de los choferes';
COMMENT ON COLUMN correoElectronicoChofer.correoElectronico IS 'Es el correo electronico de un chofer';
COMMENT ON COLUMN correoElectronicoChofer.idChofer IS 'Es el numero identificador de los choferes,es un numero unico';

